#BlueJ class context
comment0.target=LogEntry
comment0.text=\r\n\ Store\ the\ data\ from\ a\ single\ line\ of\ a\r\n\ web-server\ log\ file.\r\n\ Individual\ fields\ are\ made\ available\ via\r\n\ accessors\ such\ as\ getHour()\ and\ getMinute().\r\n\ \r\n\ @author\ David\ J.\ Barnes\ and\ Michael\ Kolling.\r\n\ @version\ 2006.03.30\r\n
comment1.params=logline
comment1.target=LogEntry(java.lang.String)
comment1.text=\r\n\ Decompose\ a\ log\ line\ so\ that\ the\ individual\ fields\r\n\ are\ available.\r\n\ @param\ logline\ A\ single\ line\ from\ the\ log.\r\n
comment2.params=
comment2.target=int\ getDay()
comment3.params=
comment3.target=int\ getMonth()
comment4.params=
comment4.target=int\ getYear()
comment5.params=
comment5.target=int\ getHour()
comment5.text=\r\n\ @return\ The\ hour\ field\ from\ the\ log\ line.\r\n
comment6.params=
comment6.target=int\ getMinute()
comment6.text=\r\n\ @return\ The\ minute\ field\ from\ the\ log\ line.\r\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment7.text=\r\n\ Create\ a\ string\ representation\ of\ the\ data.\r\n\ This\ is\ not\ necessarily\ identical\ with\ the\r\n\ text\ of\ the\ original\ log\ line.\r\n\ @return\ A\ string\ representing\ the\ data\ of\ this\ entry.\r\n
comment8.params=otherEntry
comment8.target=int\ compareTo(LogEntry)
comment8.text=\r\n\ Compare\ the\ date/time\ combination\ of\ this\ log\ entry\r\n\ with\ another.\r\n\ @param\ otherEntry\ The\ other\ entry\ to\ compare\ against.\r\n\ @return\ A\ negative\ value\ if\ this\ entry\ comes\ before\ the\ other.\r\n\ \ \ \ \ \ \ \ \ A\ positive\ value\ if\ this\ entry\ comes\ after\ the\ other.\r\n\ \ \ \ \ \ \ \ \ Zero\ if\ the\ entries\ are\ the\ same.\r\n
numComments=9
